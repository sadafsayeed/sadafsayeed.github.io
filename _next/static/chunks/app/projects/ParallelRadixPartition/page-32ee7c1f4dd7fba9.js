(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[973],{712:(e,s,a)=>{Promise.resolve().then(a.bind(a,5779))},5779:(e,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>m});var l=a(5155),t=a(5805),i=a.n(t),r=a(6766),n=a(6874),c=a.n(n),d=a(2115);let o=["bg-violet-300","bg-blue-300","bg-green-300","bg-yellow-300","bg-purple-300","bg-orange-300","bg-teal-300"];function m(){let[e,s]=(0,d.useState)("");return(0,d.useEffect)(()=>{s(o[Math.floor(Math.random()*o.length)])},[]),(0,l.jsx)("div",{className:"".concat(i().className," ").concat(e," text-black min-h-screen min-w-screen"),children:(0,l.jsxs)("div",{className:"mx-auto mx-auto    w-[768px]    lg:w-[1024px]    xl:w-[1280px]    2xl:w-[1536px]  2xl:px-100 2xl:py-20 xl:px-90 xl:py-15 lg:px-55 lg:py-15 md:px-40 md:py-15 sm:px-20 sm:py-10",children:[(0,l.jsx)(c(),{href:"/",children:(0,l.jsxs)("div",{className:"flex font-bold",children:[(0,l.jsx)("div",{className:"mr-2 mb-4",children:"←"}),"Home"]})}),(0,l.jsxs)("div",{className:"grid grid-cols-2 grid-rows-1",children:[(0,l.jsx)(r.default,{src:"/images/parallel_radix.png",alt:"About me",width:200,height:200,className:"rounded-[25%] mb-3 2xl:h-70 2xl:w-73 lg:h-55 lg:w-58 md:h-48 md:w-48"}),(0,l.jsx)("div",{className:"flex items-center h-full",children:(0,l.jsxs)("div",{className:"text-4xl font-bold",children:[(0,l.jsx)("div",{children:"Parallel Radix Partition"}),(0,l.jsx)("div",{className:"my-2 text-sm",children:"CUDA C"})]})})]}),(0,l.jsx)("div",{className:"py-1 font-bold",children:"About the project"}),(0,l.jsx)("div",{className:"justify-center text-left py-2",children:"This project implements a GPU-based parallel radix partitioning algorithm using three CUDA kernels-histogram, prefix scan, and reorder-to group keys by radix values efficiently. Shared memory and atomic operations are used to optimize performance and ensure thread safety, while synchronization with __syncthreads() guarantees correctness. After several optimizations, including reduced global memory access and improved block calculations, the execution time for processing 1,000,000 elements across 512 partitions dropped from 1.67 ms to 1.19 ms, achieving a 29% speedup."}),(0,l.jsx)("a",{href:"https://github.com/sadafsayeed/CUDA_Parallel_Radix_Partition",target:"_blank",children:(0,l.jsxs)("div",{className:"flex bg-stone-950 text-white p-2 items-center mt-3",children:["Check out the GitHub Repo",(0,l.jsx)("div",{className:"ml-auto",children:"→"})]})})]})})}},5805:e=>{e.exports={style:{fontFamily:"'Quicksand', 'Quicksand Fallback'",fontStyle:"normal"},className:"__className_eb3dd3"}}},e=>{var s=s=>e(e.s=s);e.O(0,[720,259,441,684,358],()=>s(712)),_N_E=e.O()}]);